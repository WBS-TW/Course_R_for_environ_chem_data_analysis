---
Title: Exploratory data analysis
output: html_document
number-sections: true
editor_options: 
  chunk_output_type: console
---

```{r}
#| echo: false
#| warning: false
#| message: false
library(tidyverse)
library(skimr)
library(EnvStats)
library(gt)
PFAS_insects <- readxl::read_excel("data/Statistics_Kumla_20200408.xlsx", 
    sheet = "Overview")
PFAS_isotopes <- readxl::read_excel("data/Statistics_Kumla_20200408.xlsx", 
    sheet = "Overiew Iso")

PFAS_insects_long <- PFAS_insects  |>  # shortcut for pipe Ctrl + shift + M
  pivot_longer(cols = PFBA:sum_21PFAS, # select all columns from PFBA to sum_21PFAS
               names_to = "PFAS", # name of the new column
               values_to = "Conc") |>  #name of the values from PFBA:sum_21PFAS
  mutate(PFAS = as.factor(PFAS)) #make PFAS column a factor variable
```

# Exploratory data analysis

<https://www.epa.gov/caddis-vol4/exploratory-data-analysis>

## Tidy the data files for R

Make sure to clean up and tidy your tables before importing into R.

-   Make sure that the tables have headers in the first row. Keep the variables as columns and samples as rows.

-   Variable names should not start with a number or contain any special characters or space.

-   If a variable contain multiple words, use either the camelCase or snake_case naming conventions:

    -   camelCase: the first word is always in lowercase and every other word starts with a capital letter. The words are also not separated by spaces, dashes, or underscores.

    -   snake_case: each space is replaced with an underscore "\_" character, and words are written in lowercase.

## Installing Bioconductor packages

Some packages that you might use is in the Bioconductor repository, which is a repository for bioinformatics.

Check this site on how to install Bioconductor packages: <https://bioconductor.org/install/>

## First glance of the data

```{r}

skim(PFAS_isotopes)
```


## Exploratory statistics

Which tests should I use?

<https://statsandr.com/blog/files/overview-statistical-tests-statsandr.pdf>

[![Flow chart on choices of statistical tests](data/chart_statisticalanalysis.jpg)](https://doi.org/10.1016/j.aiia.2020.09.002)



### Testing normal distribution


Q-Q plot



## Adding tables

<https://youtube.com/watch?v=qFOFMed18T4&si=SNQQ_T5sT_DXjnmM>

```{r}

PFAS_insects_conc <- PFAS_insects_long |> 
  filter(str_detect(PFAS, "sum_21PFAS")) |> 
  summarise(
    min = min(Conc, na.rm = TRUE),
    mean = mean(Conc, na.rm = TRUE),
    max = max(Conc, na.rm = TRUE),
    .by = c('Group', "PFAS")
  )


```

```{r}

plot_violin_Group <- function(my_group) {
  full_range <- PFAS_insects_long |>
    filter(str_detect(PFAS, "sum_21PFAS")) |> 
    pull(Conc) |>
    range(na.rm = TRUE)

  PFAS_insects_long |>
    filter(str_detect(PFAS, "sum_21PFAS")) |> 
    filter(Group == my_group) |>
    ggplot(aes(x = Conc, y = Group)) +
    geom_violin(fill = 'dodgerblue4') +
    theme_void() +
    coord_cartesian(xlim = full_range)
}

```

```{r}
# https://youtube.com/watch?v=qFOFMed18T4&si=SNQQ_T5sT_DXjnmM

PFAS_insects_conc |>
  mutate(Distribution = Group) |>
  gt() |>
  tab_spanner( #adding aligned row about selected columns
    label = 'PFAS concentrations',
    columns = c(-Group, -PFAS)
  ) |> 
  fmt_number(decimals = 2) |> 
  cols_align('left', columns = Group) |> 
  text_transform(
    locations = cells_body(columns = 'Distribution'),
    fn = function(column) {
      map(column, plot_violin_Group) |>
        ggplot_image(height = px(50), aspect_ratio = 3)
    }
  ) 
```
