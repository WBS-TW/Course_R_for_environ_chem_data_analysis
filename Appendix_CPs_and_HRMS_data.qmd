---
Title: Data analysis of CPs (Idoia) and HRMS data (Victoria)
output: html_document
number-sections: false
editor_options: 
  chunk_output_type: console
---

# Data analysis of CPs and HRMS data

```{r start}
#| echo: true
#| warning: false
#| message: false

library(tidyverse)
library(readxl)
library(plotly)
library(EnvStats)
library(ggrepel)
library(DT)
```

### Victoria HRMS data

$$
masserror\_ppm =\frac{mz\_theor - mz\_meas}{mz\_theor}*10^6
$$

$$
mz\_theor - mz\_meas = mz\_diff = \frac{masserror\_ppm}{10^6}*mz\_theor
$$

```{r}

### Loading raw data



# Need to change format to dbl for many variables as read_excel somehow converts to character
qc5rep_hdmse_peakpicking_featurelist_MZMINE <- read_xlsx("data/qc5rep_hdmse_peakpicking_featurelist_MZMINE.xlsx") |> 
  mutate(across(!"id" & !ends_with("_state") & !ends_with("_unit"), as.double)) #convert to double for all except "_id" and "_state" columns

# add function to calculate absolute mass error based on ppm and measured mz for MSDIAL data
mzdiff <- function(masserror_ppm, mz_meas) {
mzdiff <- masserror_ppm*mz_meas/10^6
return(mzdiff)
}

qc3rep_hdmse_peakpicking_featurelist_MSDIAL <- read_xlsx("data/qc3rep_hdmse_peakpicking_featurelist_MSDIAL.xlsx") |> 
  mutate(Mz_min = `Average Mz` - mzdiff(10,`Average Mz`)) |> 
  mutate(Mz_max = `Average Mz` + mzdiff(10,`Average Mz`)) |> 
  select(1:3, Mz_min, Mz_max, everything()) #reorder columns


unifi <- tibble(
  compound=c("acetaminophen","caffeine","leucine enkephaline","reserpine","sulfadimethoxine","sulfaguanidine","terfenadine","val-tyr-val","verapamil"),
  mz_unifi= c(152.0697, 195.0870, 556.2756, 609.2787, 311.0801, 215.0589, 472.3197, 380.2173, 455.2892),
  rt_unifi=c(0.56,1.30,2.37,3.37,2.96,0.31,3.66,1.28,3.26),
  dt_unifi=c(2.26,2.60,6.41,7.23,4.00,3.01,6.48,5.05,5.66)) |> 
  mutate(rt_unifi_min = rt_unifi - 0.05) |> # adding min value of retention time
  mutate(rt_unifi_max = rt_unifi + 0.05) # adding max value of retention time


```

MzMine hits: use `inner_join` (<https://dplyr.tidyverse.org/reference/mutate-joins.html>)

```{r}
# Also needs to add filter by drift time

unifi_mzmine_hits <- unifi |> 
  inner_join(qc5rep_hdmse_peakpicking_featurelist_MZMINE,
            join_by(mz_unifi < `mz_range:max`, 
                    mz_unifi > `mz_range:min`,
                    rt_unifi_min < rt,
                     rt_unifi_max > rt))

DT::datatable(unifi_mzmine_hits)

```

MS-DIAL hits

```{r}

unifi_msdial_hits <- unifi |> 
  inner_join(qc3rep_hdmse_peakpicking_featurelist_MSDIAL,
             join_by(mz_unifi < Mz_max,
                     mz_unifi < Mz_min,
                     rt_unifi_min < `Average Rt(min)`,
                     rt_unifi_max > `Average Rt(min)`))

unifi_msdial_hits |> 
  select(-`MS1 isotopic spectrum`, -`MS/MS spectrum`) |> #remove these columns to get nicer table
DT::datatable()
```

### Idoia CP data

```{r}

# GC_qToF_CPsFoodResults <- read_excel("data/GC_qToF_CPsFoodResults.xlsx")

# Importing new Skyline report "CP" from 2024-03-05
# These are currently: 
# "Replicate Name", "Sample Type", "Molecule", "Molecule List", Molecule Name", "Precursor Ion Formula", "Isotope Label Type",
# "Transition Note", "Standard Type", "Precursor Adduct", "Precursor Mz", "Average Measured Retention Time", "Explicit Retention Time", 
# "Explicit Retention Time Window", "Area", "Molecule Note" 

Skyline_Report_Method_20240305 <- read_csv("data/Skyline_Report_Method_20240305.csv", 
                                           na = c("NA", NaN, "âˆž", "#N/A")) |> # Specify some strings as NA values
  glimpse()

# Which variables are IS and RS
IS <- "[13]C10H16Cl6"
RS <- "[13]C12H18Cl8"

# Add sample injection order


# Make df wider to prepare for normalization to RS area
Skyline_Report_Method_20240305_wide <- Skyline_Report_Method_20240305 |>
  filter(`Transition Note` == "Quan") |>
  select(-c(Molecule, `Molecule List`, `Precursor Ion Formula`, `Molecule Note`, `Standard Type`,
            `Isotope Label Type`, `Transition Note`, `Average Measured Retention Time`, `Explicit Retention Time`, `Explicit Retention Time Window`, 
            `Precursor Adduct`, `Precursor Mz`)) |> #removing these as they are associated with the homologues and will split area columns (i.e. make even wider)
  pivot_wider(names_from = c("Molecule Name"), values_from = "Area") |> 
  replace_na(list(0)) # in case NA values then replace with 0


Samples_RSnormalize <- Skyline_Report_Method_20240305_wide |> 
  filter(`Sample Type` == "Unknown") |> 
  mutate(across(C9H17Cl3:`[13]C10H16Cl6`, ~ .x/`[13]C12H18Cl8`))

# plot the area of IS and RS between samples
Samples_RSnormalize |> 
  plot_ly() |> 
  add_trace(x = ~`Replicate Name`, name = "RS area",  y = ~`[13]C12H18Cl8`, type = 'scatter', mode = 'markers') |> 
  add_trace(x = ~`Replicate Name`, name = "IS area normalized by RS", y = ~`[13]C10H16Cl6`, type = 'scatter', mode = 'markers', yaxis = "y2") |> 
  layout(yaxis2 = list(
    overlaying = "y",
    side = "right")
    ) 
  
# plot areas of IS and RS separately
Samples_RSnormalize_RS <- Samples_RSnormalize |> 
  plot_ly() |> 
  add_trace(x = ~`Replicate Name`, name = "RS area",  y = ~`[13]C12H18Cl8`, type = 'scatter', mode = 'markers') 
 
Samples_RSnormalize_IS <- Samples_RSnormalize |> 
  plot_ly() |>
  add_trace(x = ~`Replicate Name`, name = "IS area normalized by RS", y = ~`[13]C10H16Cl6`, type = 'scatter', mode = 'markers', yaxis = "y2") 

subplot(Samples_RSnormalize_RS, Samples_RSnormalize_IS, nrows = 3) |> 
  layout(legend = list(x =0.1, y = 0.4))
  


```
